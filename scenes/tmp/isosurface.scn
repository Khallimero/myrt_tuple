#include "IsoSurface.h"
#include "Sphere.h"
#include "Plan.h"
#include "BasicTexture.h"
#include "CustomPerlinPattern.h"
#include "InfiniteLight.h"

#define EMERALD Color(115./255.,158./255.,115./255.)
#define RUBY Color(224./255.,17./255.,95./255.)

double size=300;

double fct(const Point& p){
  Point h=p*(1./size);

  return (SQ(h.getX()-1)+SQ(h.getY())-.25)
    *(SQ(h.getX()+1)+SQ(h.getY())-.25)
    *(SQ(h.getX())+SQ(h.getY())-4)
    +30*SQ(h.getZ())
    -.1;
}

Vector norm(const Point& p){
  Point h=p*(1./size);
  
  double x=6*pow(h.getX(),5)
    +12*pow(h.getX(),3)*pow(h.getY(),2)
    -26*pow(h.getX(),3)
    +6*h.getX()*pow(h.getY(),4)
    -18*h.getX()*pow(h.getY(),2)
    +169*h.getX()/8;
  double y=6*pow(h.getX(),4)*h.getY()
    +12*pow(h.getX(),2)*pow(h.getY(),3)
    -18*pow(h.getX(),2)*h.getY()
    +6*pow(h.getY(),5)
    -10*pow(h.getY(),3)
    -87*h.getY()/8;
  double z=60*h.getZ();
  
  return Vector(x,y,z);
}

void buildScene(Scene& world){
  world.addShape(new IsoSurface(new Sphere(size*2+1,Mark(Point(0,0,3000))),
				&fct,&norm,
				.1,.00001,
				Mark(Point(0,0,3000),Rotation(.5,.6,0)),
				new BasicTexture(RUBY),Undefined,
				.8,0.,1000
				));
  
  world.addShape(new Plan(5000,Point::null,
			  Mark(Point(0.2,0.5,1.0),Rotation(RND*2.0*M_PI,RND*2.0*M_PI,RND*2.0*M_PI)),
			  new CustomPerlinPattern(new BasicTexture(Color::black),
						  new BasicTexture(Color::white),2,4,3,1000),Planar,
			  .9,0,1000));
  
  
  world.addLight(new InfiniteLight(Vector(1.,.35,1.),Color::white*.75));
  world.setAmbiant(Color::white*.25);
}  

void setCamera(Camera& cam){
  cam=Camera(Point::null,Vector(0,0,100),
	     Enumeration<Vector>(512,Vector(.2,0,0)),Enumeration<Vector>(384,Vector(0,.2,0)));
  //Enumeration<Vector>(1024,Vector(.1,0,0)),Enumeration<Vector>(768,Vector(0,.1,0)));
  //Enumeration<Vector>(1280,Vector(.08,0,0)),Enumeration<Vector>(1024,Vector(0,.08,0)));
  //Enumeration<Vector>(2048,Vector(.05,0,0)),Enumeration<Vector>(1536,Vector(0,.05,0)));
}

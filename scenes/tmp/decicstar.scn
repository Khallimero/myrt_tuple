#include "BasicTexture.h"
#include "DecicStar.h"
#include "ShapeBuilder.h"
#include "Plan.h"
#include "SphericLight.h"

/*
#define EPSILON (0.0000001)
#define PLAN_TAN (M_PI/1000.)
#define MAX_REC (250)
#define ISO_STEP (10.)
#define ISO_TH (0.00000001)
#define NB_REF 5
#define MAX_REF_SS 1
#define PHOTON_EQ_DST 1.
#define PHOTON_EQ_ANG (M_PI/10.)
#define PHOTON_BOX_FCT 8.
#define PHOTON_RAD 5.
#define PHOTON_REF 5
#define NB_PHOTON_IT 0
#define NB_PHOTON_LIGHT 0
#define PHOTON_EXP 1.
#define CAUSTIC_PHOTON_EXP 1.
#define RADIANCE_PHOTON_EXP .1
*/

#define ARGENT Color("C0C0C0")
#define VERT1 Color("37B57B")
//#define VERT2 Color("00C0A0")
#define VERT2 Color("00E0B0")
#define ORANGE Color("FFCC99")

void buildScene(Scene& world){
  Point ct=Point(-300,-100,3000);
  
  Shape* ds=new DecicStar(700,Mark(ct,Rotation(-M_PI/2.0,0,0)));
  /*ds->setTexture(new BasicTexture(VERT1));
  ds->setDiffCoeff(.8);
  ds->setSpecCoeff(.5);
  ds->setGlareCoeff(100);
  ds->setReflectCoeff(.1);*/
  ds->setTexture(new BasicTexture(Color::White));
  ds->setDiffCoeff(.01);
  ds->setSpecCoeff(1);
  ds->setGlareCoeff(100);
  ds->setReflectCoeff(.15);
  ds->setRefractCoeff(.85);
  ds->setDensity(1.7);
  ds->setBeer(1600,4,VERT2);
  world.addShape(ds);

  Shape* plan=new Plan(5000,Point(0,0,0),
		       Mark(Point(0.2,0.5,1.0),Rotation::random()));
  plan->setTexture(new BasicTexture(ORANGE));
  plan->setDiffCoeff(.5);
  world.addShape(plan);
  
  world.addLight(new SphericLight(500,ct+Vector(.7,.45,1)*-10000,Color::White*.8));
  world.setAmbiant(Color::White*.2);
  
  //world.setFog(Fog(Color::White,50000,2.0));

  //world.setPhotonBoxIn(new Sphere(700*1.5,Mark(ct)));
  //world.setPhotonBoxOut(new Sphere(700*1.5*10,Mark(ct)));
}

void setCamera(Camera& cam){
  cam=Camera(Point::null,Vector(0,0,100),
	     //Enumeration<Vector>(512,Vector(.2,0,0)),Enumeration<Vector>(384,Vector(0,.2,0)));
	     //Enumeration<Vector>(1024,Vector(.1,0,0)),Enumeration<Vector>(768,Vector(0,.1,0)));
	     Enumeration<Vector>(1280,Vector(.08,0,0)),Enumeration<Vector>(1024,Vector(0,.08,0)));
	     //Enumeration<Vector>(2048,Vector(.05,0,0)),Enumeration<Vector>(1536,Vector(0,.05,0)));
}

void setRendererQuality(RendererQuality& rendererQuality){
  //rendererQuality.setAliasing(3);
  //rendererQuality.setShadow(25);
}
